Autogenerated API
=================

As I said previously, ``Eazy Documentation`` processes Lisp files as a documents
and all of them will be presented in the document as sections.

It has unique docstring extration algorithm, which is able to extract docstrings
from forms which are not standard.

I've created an example for you:

.. code:: lisp

   (defmacro defrule (name &body body)
     "This is a fake macro just to demonstrate how eazy-documentation
      will extract docstrings from it's forms."
     `(defparameter ,name '(,@(rest body))))


   (defrule number-one
       "This is a rule's docstring. Nothing special, just a text.

   After macro-expansion it will be just:
          
      (defparameter number-one '((a b c)))

   "
     (a b c))

Here is the `resulting part <#EXAMPLE/APP:NUMBER-ONE>`_ of the documentation.
Pay attention, there two blocks named ``defrule:number-one`` and ``defparameter:number-one``,
but both having the same HTML id ``EXAMPLE/APP:NUMBER-ONE``. Because of this, you'll not be able to
refer the ``defrule`` or the ``parameter`` separately.
I like the concept of `locatives <http://melisgl.github.io/mgl-pax/#x-28MGL-PAX-3A-40MGL-PAX-LOCATIVES-AND-REFERENCES-20MGL-PAX-3ASECTION-29>`_ from MGL-PAX, `reviewed recently <https://cl-doc-systems.github.io/mgl-pax/>`_. They allow to select a type of an object
you are referring to.
